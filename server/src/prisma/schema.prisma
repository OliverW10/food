// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SystemData {
  key String @id @db.VarChar(100)
  value String @db.Text
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  posts     Post[]
  passwordHash String
  Followers Follow[] @relation("Follower")
  Following Follow[] @relation("Following")
}

model Follow {
  id          Int  @id @default(autoincrement())
  followerId  Int
  followingId Int
  // a User's Followers are all Follow's with followingId=id
  follower    User @relation("Follower", fields: [followingId], references: [id])
  // a User's Following are all Follow's with followerId=id
  following   User @relation("Following", fields: [followerId], references: [id])

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String   @db.VarChar(255)
  description String   @db.Text
  published   Boolean  @default(false)
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
  food        Food?    @relation(fields: [foodId], references: [id])
  foodId      Int?
  image       Image?   @relation(fields: [imageId], references: [id])
  imageId     Int?     @unique

  @@index([authorId])
  @@index([authorId, createdAt])
}


model Category {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(100) @unique
  foods Food[]
}

model Food {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255) @unique
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  Posts      Post[]
}

model Image {
  id         Int    @id @default(autoincrement())
  storageUrl String @db.Text
  Posts      Post[]
}