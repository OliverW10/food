generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SystemData {
  key   String @id @db.VarChar(100)
  value String
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String?
  passwordHash String
  Followers    Follow[] @relation("Follower")
  Following    Follow[] @relation("Following")
  posts        Post[]
}

model Follow {
  id          Int  @id @default(autoincrement())
  followerId  Int
  followingId Int
  // a User's Followers are all Follow's with followingId=id
  follower    User @relation("Follower", fields: [followingId], references: [id])
  // a User's Following are all Follow's with followerId=id
  following   User @relation("Following", fields: [followerId], references: [id])

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String   @db.VarChar(255)
  description String
  published   Boolean  @default(false)
  authorId    Int
  foodId      Int?
  imageId     Int?     @unique
  author      User     @relation(fields: [authorId], references: [id])
  food        Food?    @relation(fields: [foodId], references: [id])
  image       Image?   @relation(fields: [imageId], references: [id])

  @@index([authorId])
  @@index([authorId, createdAt])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(100)
  foods Food[]
}

model Food {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(255)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  Posts      Post[]
}

model Image {
  id         Int    @id @default(autoincrement())
  storageUrl String
  Posts      Post?
}
